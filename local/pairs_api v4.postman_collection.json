{
	"info": {
		"_postman_id": "8514209e-cb47-450e-ae99-09e33b7f6c54",
		"name": "pairs_api v4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20044007"
	},
	"item": [
		{
			"name": "tickers",
			"item": [
				{
					"name": "register (a ticker)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"symbol\": \"AABB\",\r\n    \"sectype\": \"STK\",\r\n    \"xch\": \"SMART\",\r\n    \"prixch\": \"NASDAQ\",\r\n    \"currency\":\"USD\",\r\n    \"active\": 0,\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/ticker",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"ticker"
							]
						}
					},
					"response": []
				},
				{
					"name": "update(a ticker)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"symbol\": \"ABB\",\r\n    \"sectype\": \"STK\",\r\n    \"xch\": \"SMART\",\r\n    \"prixch\": \"NASDAQ\",\r\n    \"currency\": \"USD\",\r\n    \"order_type\": \"RELATIVE\",\r\n    \"active\": 0,\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/ticker",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"ticker"
							]
						}
					},
					"response": []
				},
				{
					"name": "update(PNL)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\": \"webhook\",\r\n    \"symbol\": \"NEM\",\r\n    \"active_pos\": -131.0,\r\n    \"active_pnl\": -117.0,\r\n    \"active_cost\": 46.021\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/ticker/pnl",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"ticker",
								"pnl"
							]
						}
					},
					"response": []
				},
				{
					"name": "tickers (# of items)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{pairs_api_v4}}/tickers/0",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"tickers",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "ticker (details)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{pairs_api_v4}}/ticker/AABB",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"ticker",
								"AABB"
							]
						}
					},
					"response": []
				},
				{
					"name": "ticker (delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pairs_api_v4}}/ticker/ABBs",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"ticker",
								"ABBs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "account",
			"item": [
				{
					"name": "register (PNL)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\":\"webhook\",\r\n    \"AvailableFunds\": 31000,\r\n    \"BuyingPower\": 103295,\r\n    \"GrossPositionValue\": 103809,\r\n    \"MaintMarginReq\": 31600,\r\n    \"NetLiquidation\": 62588,\r\n     \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/pnl",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pnl"
							]
						}
					},
					"response": []
				},
				{
					"name": "update(PNL)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\":\"webhook\",\r\n    \"rowid\":300,\r\n    \"timestamp\":\"2022-06-16 23:55:36\",\r\n    \"AvailableFunds\": 32000,\r\n    \"BuyingPower\": 103295,\r\n    \"DailyPnL\": 268.9,\r\n    \"GrossPositionValue\": 103809,\r\n    \"MaintMarginReq\": 31600,\r\n    \"NetLiquidation\": 62588,\r\n    \"RealizedPnL\": 30,\r\n    \"UnrealizedPnL\": -1000,\r\n     \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/pnl",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pnl"
							]
						}
					},
					"response": []
				},
				{
					"name": "pnl (# of items)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{pairs_api_v4}}/pnls/0",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pnls",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "pnl (details)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{pairs_api_v4}}/pnl/1",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pnl",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "pnl(delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v4}}/pnl/2",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pnl",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pairs",
			"item": [
				{
					"name": "register (a pair)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"AAA-Bbb\",\r\n    \"ticker1\": \"AAA\",\r\n    \"ticker2\": \"Bbb\",\r\n    \"hedge\": 0.53,\r\n    \"contracts\": 36,\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/pair",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pair"
							]
						}
					},
					"response": []
				},
				{
					"name": "update (a pair)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"MA-V\",\r\n    \"ticker1\": \"MA\",\r\n    \"ticker2\": \"V\",\r\n    \"hedge\": 1.6,\r\n    \"contracts\": 40,\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/pair",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pair"
							]
						}
					},
					"response": []
				},
				{
					"name": "pairs (# of items)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pairs_api_v4}}/pairs/0",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pairs",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "pair (details)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pairs_api_v4}}/pair/CARR-GE",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pair",
								"CARR-GE"
							]
						}
					},
					"response": []
				},
				{
					"name": "pair (delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pairs_api_v4}}/pair/deletethis",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"pair",
								"deletethis"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "signals",
			"item": [
				{
					"name": "register (a signal)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\": \"webhook\",\r\n    \"ticker\": \"CARR-GE\",\r\n    \"order_action\": \"buy\",\r\n    \"order_contracts\": \"100\",\r\n    \"order_price\": \"400.2\",\r\n    \"mar_pos\": \"long\",\r\n    \"mar_pos_size\": \"100\",\r\n    \"pre_mar_pos\": \"flat\",\r\n    \"pre_mar_pos_size\": \"0\",\r\n    \"order_comment\": \" Enter Long\",\r\n    \"order_status\": \"waiting\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/webhook",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "update (a signal)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\": \"webhook\",\r\n    \"rowid\": 88,\r\n    \"timestamp\": \"2023-03-22 20:00:14\",\r\n    \"ticker\": \"NOVA\",\r\n    \"order_action\": \"buy\",\r\n    \"order_contracts\": 100,\r\n    \"order_price\": 400.2,\r\n    \"mar_pos\": \"long\",\r\n    \"mar_pos_size\": 100,\r\n    \"pre_mar_pos\": \"flat\",\r\n    \"pre_mar_pos_size\": 0,\r\n    \"order_comment\": \" Enter Long\",\r\n    \"order_status\": \"canceled\",\r\n    \"ticker_type\": \"single\",\r\n    \"ticker1\": \"NOVA\",\r\n    \"ticker2\": null,\r\n    \"hedge_param\": null,\r\n    \"order_id1\": null,\r\n    \"order_id2\": null,\r\n    \"price1\": null,\r\n    \"price2\": null,\r\n    \"fill_price\": null,\r\n    \"slip\": null,\r\n    \"error_msg\": null,\r\n    \"status_msg\": \"passive ticker\"\r\n    \r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/webhook",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "update (by order_id)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\": \"webhook\",\r\n    \"symbol\": \"CARR\",\r\n    \"order_id\": 24343476,\r\n    \"price\": 41.45,\r\n    \"filled_qty\": 129\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/signal/order",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"signal",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "update (by order_id)(cancel)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\": \"webhook\",\r\n    \"symbol\": \"ROIC\",\r\n    \"order_id\": 7,\r\n    \"price\": -1,\r\n    \"filled_qty\": -1,\r\n    \"cancel\":true\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/signal/order",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"signal",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "signals (# of items)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v4}}/signals/0",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"signals",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "list of ticker",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{pairs_api_v4}}/signals/ticker/CARR-GE/0",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"signals",
								"ticker",
								"CARR-GE",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "list of status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{pairs_api_v4}}/signals/status/waiting/0",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"signals",
								"status",
								"waiting",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "signal details)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pairs_api_v4}}/signal/43",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"signal",
								"43"
							]
						}
					},
					"response": []
				},
				{
					"name": "signal (delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/ecmascript",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pairs_api_v4}}/signal/89",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"signal",
								"89"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "login(with a user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var csrf_token = postman.getResponseCookie(\"_csrf_token\");\r",
									"postman.setEnvironmentVariable(\"csrf_token\", csrf_token.value);\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"pm.test(\"access_token not empty\", function () {\r",
									"    pm.expect(jsonData.access_token).not.eql(undefined);\r",
									"});\r",
									"\r",
									"pm.test(\"refresh token not empty\", function () {\r",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);\r",
									"});\r",
									"// set access token as environement variable\r",
									"if (jsonData.access_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"access_token\", null);\r",
									"}\r",
									"// set refresh token as environement variable\r",
									"if (jsonData.refresh_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);\r",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.get(\"csrf_token\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"123\",\r\n    \"expire\":20,\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/login",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.test(\"access_token not empty\", function () {\r",
									"    pm.expect(jsonData.access_token).not.eql(undefined);\r",
									"});\r",
									"\r",
									"pm.test(\"refresh token not empty\", function () {\r",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);\r",
									"});\r",
									"// set access token as environement variable\r",
									"if (jsonData.access_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"access_token\", null);\r",
									"}\r",
									"// set refresh token as environement variable\r",
									"if (jsonData.refresh_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pairs_api_v4}}/logout",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh (token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.test(\"access_token not empty\", function () {\r",
									"    pm.expect(jsonData.access_token).not.eql(undefined);\r",
									"});\r",
									"\r",
									"pm.test(\"refresh token not empty\", function () {\r",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);\r",
									"});\r",
									"// set access token as environement variable\r",
									"if (jsonData.access_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"access_token\", null);\r",
									"}\r",
									"// set refresh token as environement variable\r",
									"if (jsonData.refresh_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pairs_api_v4}}/refresh",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "register (a user)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user3\",\r\n    \"password\": \"123\",\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/user",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "update(a user)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user3\",\r\n    \"password\": \"123\",\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/user",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "users (# of users)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v4}}/users/0",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"users",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "user (details)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v4}}/user/admin",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"user",
								"admin"
							]
						}
					},
					"response": []
				},
				{
					"name": "user (delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"_csrf_token\": \"{{csrf_token}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{pairs_api_v4}}/user/user3",
							"host": [
								"{{pairs_api_v4}}"
							],
							"path": [
								"user",
								"user3"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}