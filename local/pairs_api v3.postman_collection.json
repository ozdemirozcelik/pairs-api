{
	"info": {
		"_postman_id": "d5ea7e87-1ee6-4d70-af24-43a1afa64d3e",
		"name": "pairs_api v3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20044007"
	},
	"item": [
		{
			"name": "tickers",
			"item": [
				{
					"name": "register (a ticker)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"symbol\": \"CCC\",\r\n    \"sectype\": \"STK\",\r\n    \"xch\": \"SMART\",\r\n    \"prixch\": \"NASDAQ\",\r\n    \"currency\":\"USD\",\r\n    \"active\": 0\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/regticker",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"regticker"
							]
						}
					},
					"response": []
				},
				{
					"name": "update(a ticker)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"symbol\": \"CCC\",\r\n    \"sectype\": \"STK\",\r\n    \"xch\": \"SMART\",\r\n    \"prixch\": \"NASDAQ\",\r\n    \"currency\": \"USD\",\r\n    \"order_type\": \"RELATIVE\",\r\n    \"active\": 0\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/regticker",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"regticker"
							]
						}
					},
					"response": []
				},
				{
					"name": "update(PNL)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\": \"webhook\",\r\n    \"symbol\": \"ACC\",\r\n    \"active_pos\": 12,\r\n    \"active_pnl\": 100.5,\r\n    \"active_cost\": 106\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/ticker/updatepnl",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"ticker",
								"updatepnl"
							]
						}
					},
					"response": []
				},
				{
					"name": "tickers (# of items)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/tickers/0",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"tickers",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "ticker (details)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/ticker/CCC",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"ticker",
								"CCC"
							]
						}
					},
					"response": []
				},
				{
					"name": "ticker (delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/ticker/CCC",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"ticker",
								"CCC"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "account",
			"item": [
				{
					"name": "register (PNL)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\":\"webhook\",\r\n    \"AvailableFunds\": 31000,\r\n    \"BuyingPower\": 103295,\r\n    \"DailyPnL\": 268.9,\r\n    \"GrossPositionValue\": 103809,\r\n    \"MaintMarginReq\": 31600,\r\n    \"NetLiquidation\": 62588,\r\n    \"RealizedPnL\": 30,\r\n    \"UnrealizedPnL\": -1000\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/regpnl",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"regpnl"
							]
						}
					},
					"response": []
				},
				{
					"name": "update(PNL)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\":\"webhook\",\r\n    \"rowid\":10,\r\n    \"timestamp\":\"2022-06-16 23:55:36\",\r\n    \"AvailableFunds\": 32000,\r\n    \"BuyingPower\": 103295,\r\n    \"DailyPnL\": 268.9,\r\n    \"GrossPositionValue\": 103809,\r\n    \"MaintMarginReq\": 31600,\r\n    \"NetLiquidation\": 62588,\r\n    \"RealizedPnL\": 30,\r\n    \"UnrealizedPnL\": -1000\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/regpnl",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"regpnl"
							]
						}
					},
					"response": []
				},
				{
					"name": "pnl (# of items)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/pnl/1",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"pnl",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "pnl(delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/pnl/2",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"pnl",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pairs",
			"item": [
				{
					"name": "register (a pair)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ticker1\": \"AAA\",\r\n    \"ticker2\": \"BBB\",\r\n    \"hedge\": 1.123,\r\n    \"status\": 0,\r\n    \"do not save\": 0\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/regpair",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"regpair"
							]
						}
					},
					"response": []
				},
				{
					"name": "update (a pair)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"AAA-XXX\",\r\n    \"hedge\": 1.4,\r\n    \"status\": 0\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/regpair",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"regpair"
							]
						}
					},
					"response": []
				},
				{
					"name": "pairs (# of items)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pairs_api_v3}}/pairs/0",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"pairs",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "pair (details)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pairs_api_v3}}/pair/AAA-BBB",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"pair",
								"AAA-BBB"
							]
						}
					},
					"response": []
				},
				{
					"name": "pair (delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v2}}/pair/XXX-ZZZ",
							"host": [
								"{{pairs_api_v2}}"
							],
							"path": [
								"pair",
								"XXX-ZZZ"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "signals",
			"item": [
				{
					"name": "register (a signal)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\": \"webhook\",\r\n    \"ticker\": \"NMFC-0.72*NASDAQ:ROIC\",\r\n    \"order_action\": \"buy\",\r\n    \"order_contracts\": 100,\r\n    \"order_price\": -0.01,\r\n    \"mar_pos\": \"long\",\r\n    \"mar_pos_size\": 100,\r\n    \"pre_mar_pos\": \"flat\",\r\n    \"pre_mar_pos_size\": 0,\r\n    \"order_comment\": \"Enter Long(...)\"\r\n}\r\n"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/webhook",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "update (a signal)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"passphrase\": \"webhook\",\r\n            \"rowid\": 31,\r\n            \"timestamp\": \"2022-05-27 00:01:42\",\r\n            \"ticker\": \"NMFC\",\r\n            \"order_action\": \"buy\",\r\n            \"order_contracts\": 100,\r\n            \"order_price\": -0.01,\r\n            \"mar_pos\": \"long\",\r\n            \"mar_pos_size\": 100,\r\n            \"pre_mar_pos\": \"flat\",\r\n            \"pre_mar_pos_size\": 0,\r\n            \"order_comment\": \"Enter Long(...)\",\r\n            \"order_status\": \"canceled\",\r\n            \"ticker_type\": \"single\",\r\n            \"stk_ticker1\": \"NMFC\",\r\n            \"stk_ticker2\": null,\r\n            \"hedge_param\": null,\r\n            \"order_id1\": 12,\r\n            \"order_id2\": 14,\r\n            \"stk_price1\": null,\r\n            \"stk_price2\": null,\r\n            \"fill_price\": null,\r\n            \"slip\": null,\r\n            \"error_msg\": \"unregistered ticker\"\r\n        }"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/webhook",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "update (by order_id)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\": \"webhook\",\r\n    \"order_id\": 1166,\r\n    \"stk_price\": 326.50,\r\n    \"cancel\":true,\r\n    \"partial\": true,\r\n    \"order_contracts\": 15\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/signal/updateorder",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"signal",
								"updateorder"
							]
						}
					},
					"response": []
				},
				{
					"name": "update (by order_id)(cancel)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"passphrase\": \"webhook\",\r\n    \"order_id\": 1166,\r\n    \"stk_price\": 326.50,\r\n    \"cancel\":true,\r\n    \"partial\": true,\r\n    \"order_contracts\": 15\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/signal/updateorder",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"signal",
								"updateorder"
							]
						}
					},
					"response": []
				},
				{
					"name": "signals (# of items)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/signals/0",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"signals",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "list of ticker",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/signals/ticker/AAA/3",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"signals",
								"ticker",
								"AAA",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "list of status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/signals/status/waiting/2",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"signals",
								"status",
								"waiting",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "signal details)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{pairs_api_v3}}/signal/4",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"signal",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "signal (delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/signal/10",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"signal",
								"10"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "login(with a user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.test(\"access_token not empty\", function () {\r",
									"    pm.expect(jsonData.access_token).not.eql(undefined);\r",
									"});\r",
									"\r",
									"pm.test(\"refresh token not empty\", function () {\r",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);\r",
									"});\r",
									"// set access token as environement variable\r",
									"if (jsonData.access_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"access_token\", null);\r",
									"}\r",
									"// set refresh token as environement variable\r",
									"if (jsonData.refresh_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"123\",\r\n    \"expire\":20\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/login",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.test(\"access_token not empty\", function () {\r",
									"    pm.expect(jsonData.access_token).not.eql(undefined);\r",
									"});\r",
									"\r",
									"pm.test(\"refresh token not empty\", function () {\r",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);\r",
									"});\r",
									"// set access token as environement variable\r",
									"if (jsonData.access_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"access_token\", null);\r",
									"}\r",
									"// set refresh token as environement variable\r",
									"if (jsonData.refresh_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{pairs_api_v3}}/logout",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "refresh (token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.test(\"access_token not empty\", function () {\r",
									"    pm.expect(jsonData.access_token).not.eql(undefined);\r",
									"});\r",
									"\r",
									"pm.test(\"refresh token not empty\", function () {\r",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);\r",
									"});\r",
									"// set access token as environement variable\r",
									"if (jsonData.access_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"access_token\", null);\r",
									"}\r",
									"// set refresh token as environement variable\r",
									"if (jsonData.refresh_token !== undefined) {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);\r",
									"} else {\r",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{pairs_api_v3}}/refresh",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "register (a user)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user2\",\r\n    \"password\": \"123\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/reguser",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"reguser"
							]
						}
					},
					"response": []
				},
				{
					"name": "update(a user)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"user2\",\r\n    \"password\": \"123\"\r\n\r\n}"
						},
						"url": {
							"raw": "{{pairs_api_v3}}/reguser",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"reguser"
							]
						}
					},
					"response": []
				},
				{
					"name": "users (# of users)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/users/0",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"users",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "user (details)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/user/user2",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"user",
								"user2"
							]
						}
					},
					"response": []
				},
				{
					"name": "user (delete)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{pairs_api_v3}}/user/user",
							"host": [
								"{{pairs_api_v3}}"
							],
							"path": [
								"user",
								"user"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}